{"version":3,"file":"static/js/525.814031c7.chunk.js","mappings":"wLAuEA,UArDA,WACE,MAAkCA,EAAAA,GAAAA,iBAATC,GAAR,EAATC,UAAqB,EAAVC,MAEnB,OADAC,QAAQC,IAAIJ,IAEV,SAAC,KAAI,WACH,SAAC,KAAI,CAACK,GAAI,GAAG,UACX,UAAC,KAAK,YACJ,SAAC,KAAW,WACV,4BAAQ,0BAEV,SAAC,KAAS,WACR,SAAC,KAAI,CAACC,UAAU,YAAW,UACzB,UAAC,KAAM,CAACC,MAAM,SAASC,UAAQ,EAACF,UAAU,cAAcG,OAAK,EAACC,YAAU,EAACC,SAAO,aAC9E,SAAC,IAAU,CAACC,MAAM,QAAO,UACvB,UAAC,KAAS,YACR,SAAC,KAAgB,UAAC,YAClB,SAAC,KAAgB,UAAC,sCAClB,SAAC,KAAgB,UAAC,YAClB,SAAC,KAAgB,UAAC,iBAGtB,SAAC,KAAU,UACJ,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAME,KAAKW,KAAI,SAACC,EAAMC,GAAK,OAC1B,UAAC,KAAS,CAAC,QAAM,qBAAoB,WACnC,SAAC,KAAc,UAAEA,EAAQ,KACzB,UAAC,KAAc,YACb,yBAAgB,IAAVA,EAAc,cAAgB,aACpC,iBAAKT,UAAU,6BAA4B,WACzC,2BAAQQ,EAAKE,QAAU,cAAoB,IAC1CF,EAAKE,QAAM,mBAAgBC,EAAAA,GAAAA,eAA0BH,EAAKI,WAAU,YAIzE,UAAC,KAAc,WAAC,OAAKJ,EAAKK,UAC1B,SAAC,KAAc,WACb,yBACE,SAAC,KAAM,CAACP,MAAOE,EAAKE,OAAS,UAAY,SAAS,SAC/CF,EAAKE,OAAS,OAAS,cAdWD,EAkB/B,mBAUhC,C","sources":["views/users/Emis.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { usersApi } from 'src/APIs'\r\nimport { dateHelper } from 'src/helpers'\r\n\r\nfunction Emis() {\r\n  const { isLoading, data: resp } = usersApi.useIntallments()\r\n  console.log(resp)\r\n  return (\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <strong>Installments Chart</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CRow className=\"table-row\">\r\n              <CTable align=\"middle\" bordered className=\"mb-0 border\" hover responsive striped>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell>S. No.</CTableHeaderCell>\r\n                    <CTableHeaderCell>Installments Date & Payment Type</CTableHeaderCell>\r\n                    <CTableHeaderCell>Amount</CTableHeaderCell>\r\n                    <CTableHeaderCell>Status</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {resp?.data.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell>{index + 1}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div>{index === 0 ? 'Downpayment' : 'Payment'}</div>\r\n                        <div className=\"small text-medium-emphasis\">\r\n                          <span>{!item.status && ' Unpaid |'}</span>{' '}\r\n                          {item.status && `Paid on: ${dateHelper.formatRegister(item.updatedAt)} `}\r\n                        </div>\r\n                      </CTableDataCell>\r\n\r\n                      <CTableDataCell>Rs. {item.price}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <h5>\r\n                          <CBadge color={item.status ? 'success' : 'danger'}>\r\n                            {item.status ? 'Paid' : 'Due'}\r\n                          </CBadge>\r\n                        </h5>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Emis\r\n"],"names":["usersApi","resp","isLoading","data","console","log","md","className","align","bordered","hover","responsive","striped","color","map","item","index","status","dateHelper","updatedAt","price"],"sourceRoot":""}