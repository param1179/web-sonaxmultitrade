{"version":3,"file":"static/js/6780.19e6468d.chunk.js","mappings":"yRASe,SAASA,EAAW,GAAiC,IAAD,MAUD,EAV7BC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAG,EAAHA,IACpDC,GAAaC,EAAAA,EAAAA,MAEXC,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,SACXC,EAAOF,EAAQG,KAAOC,EAAAA,EAAAA,YAAqBJ,EAAQG,KAAKE,KAC1DC,EAAKJ,EAAW,OAAJA,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMG,YAAI,WAAN,EAAJ,EAAYJ,SAAW,GACnCM,EAASL,EAAW,OAAJA,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMG,YAAI,WAAN,EAAJ,EAAYE,OAAS,GAEnCC,EAAcD,GAA4B,IAAlBA,EAAOE,OAEjCD,GAAmD,WAAhC,OAAJN,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMG,YAAI,WAAN,EAAJ,EAAYE,OAAO,GAAGG,aACvCH,EAAa,OAAJL,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMG,YAAI,WAAN,EAAJ,EAAYE,OAAOI,WAyC9B,OALE,SAAC,IAAQ,CAAWC,OApBlB,SAAChB,EAAU,WACT,iBACEiB,KAAK,SACLC,QAAS,kBACPhB,EAAW,OAAQ,CACjBiB,MAAO,CACLlB,IAAoB,kBAARA,EAAmBA,EAAMI,EACrCS,UAAmB,IAARf,EAAY,OAAS,UAElC,EACH,WAED,SAAC,IAAK,CAACqB,UAAU,uBAAuBC,KAAMC,EAAAA,EAASC,OAAQ,MAC/D,yBAAMnB,EAAQoB,IAAMpB,EAAQoB,IAAM,MAClC,yBAAMpB,EAAQqB,iBAMsB,SAjCtCb,EAEAD,GACAA,EAAOe,KAAI,SAACC,EAAOC,GACjB,OAAO,SAAC/B,EAAU,CAASC,KAAM6B,EAAO5B,IAAK6B,EAAG5B,WAAYA,EAAYC,IAAKS,GAArDkB,EAC1B,IAGG,MAyBQ7B,EAMnB,CCHA,MAlDA,WAAqB,IAAD,MAI+B,EAH3C8B,GAAOC,EAAAA,EAAAA,kBACb,EAA4BtB,EAAAA,EAAAA,YAAqBqB,EAAKtB,KAAnCE,GAAF,EAATsB,UAAe,EAAJtB,MACfE,EAAa,OAAJF,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYE,OACe,WAAhC,OAAJF,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYE,OAAO,GAAGG,aACxBH,EAAa,OAAJF,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYE,OAAOI,WAG9B,IAAMf,EAAagC,EAAAA,GAAAA,IAAU,8HAO7B,OACE,4BACE,4BAAQ,eAER,SAAC,IAAI,CACHC,UAAW,MACXC,UAAW,QACXC,iBAAkB,OAClBnB,OACE,SAAChB,EAAU,WACT,4BACE,SAAC,IAAK,CAACoB,UAAU,uBAAuBC,KAAMC,EAAAA,EAASC,OAAQ,MAC/D,yBAAMM,EAAKL,IAAMK,EAAKL,IAAM,MAC5B,yBAAMK,EAAKJ,iBAGhB,SAEAd,IACO,QADD,EACLA,SAAM,aAAN,EAAQe,KAAI,SAACC,EAAOC,GAClB,OACE,SAAC/B,EAAU,CAETC,KAAM6B,EACN5B,IAAK6B,EACL5B,WAAYA,EACZC,IAAS,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKJ,UAJXuB,EAOX,SAIV,C","sources":["components/FamilyTree.js","views/users/GetUsers.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport PropTypes from 'prop-types'\r\nimport { adminApi } from 'src/APIs'\r\nimport { cilUser } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function FamilyTree({ item, num, StyledNode, pId }) {\r\n  const navigation = useNavigate()\r\n\r\n  const { childId, parentId } = item\r\n  const resp = childId._id && adminApi.useGetTeams(childId._id).data\r\n  var pD = resp ? resp?.data?.parentId : ''\r\n  var childs = resp ? resp?.data?.childs : []\r\n\r\n  const hasChildren = childs && childs.length !== 0\r\n\r\n  if (hasChildren && resp?.data?.childs[0].placement === 'Right') {\r\n    childs = resp?.data?.childs.reverse()\r\n  }\r\n  const newChild = () => {\r\n    if (hasChildren) {\r\n      return (\r\n        childs &&\r\n        childs.map((child, n) => {\r\n          return <FamilyTree key={n} item={child} num={n} StyledNode={StyledNode} pId={pD} />\r\n        })\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const renderBranch = () => {\r\n    return (\r\n      <StyledNode>\r\n        <div\r\n          role=\"button\"\r\n          onClick={() =>\r\n            navigation('/add', {\r\n              state: {\r\n                pId: typeof pId === 'string' ? pId : parentId,\r\n                placement: num === 0 ? 'Left' : 'Right',\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <CIcon className=\"sidebar-brand-narrow\" icon={cilUser} height={50} />\r\n          <div>{childId.uId ? childId.uId : ''}</div>\r\n          <div>{childId.firstName}</div>\r\n        </div>\r\n      </StyledNode>\r\n    )\r\n  }\r\n  const StyledTreeExample = () => (\r\n    <TreeNode key={num} label={renderBranch()}>\r\n      {newChild()}\r\n    </TreeNode>\r\n  )\r\n\r\n  return StyledTreeExample()\r\n}\r\n\r\nFamilyTree.propTypes = {\r\n  item: PropTypes.object,\r\n  num: PropTypes.number,\r\n  pId: PropTypes.any,\r\n  StyledNode: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilUser } from '@coreui/icons'\r\nimport FamilyTree from 'src/components/FamilyTree'\r\n\r\nfunction GetUsers() {\r\n  const user = getProfileData()\r\n  const { isLoading, data } = adminApi.useGetTeams(user._id)\r\n  var childs = data?.data?.childs\r\n  if (data?.data?.childs[0].placement === 'Right') {\r\n    childs = data?.data?.childs.reverse()\r\n  }\r\n\r\n  const StyledNode = styled.div`\r\n    padding: 5px;\r\n    border-radius: 8px;\r\n    display: inline-block;\r\n    border: 1px solid red;\r\n  `\r\n\r\n  return (\r\n    <div>\r\n      <strong>All Teams</strong>\r\n\r\n      <Tree\r\n        lineWidth={'2px'}\r\n        lineColor={'green'}\r\n        lineBorderRadius={'10px'}\r\n        label={\r\n          <StyledNode>\r\n            <div>\r\n              <CIcon className=\"sidebar-brand-narrow\" icon={cilUser} height={50} />\r\n              <div>{user.uId ? user.uId : ''}</div>\r\n              <div>{user.firstName}</div>\r\n            </div>\r\n          </StyledNode>\r\n        }\r\n      >\r\n        {childs &&\r\n          childs?.map((child, n) => {\r\n            return (\r\n              <FamilyTree\r\n                key={n}\r\n                item={child}\r\n                num={n}\r\n                StyledNode={StyledNode}\r\n                pId={data?.data.parentId}\r\n              />\r\n            )\r\n          })}\r\n      </Tree>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n"],"names":["FamilyTree","item","num","StyledNode","pId","navigation","useNavigate","childId","parentId","resp","_id","adminApi","data","pD","childs","hasChildren","length","placement","reverse","label","role","onClick","state","className","icon","cilUser","height","uId","firstName","map","child","n","user","getProfileData","isLoading","styled","lineWidth","lineColor","lineBorderRadius"],"sourceRoot":""}