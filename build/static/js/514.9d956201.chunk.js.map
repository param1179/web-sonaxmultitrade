{"version":3,"file":"static/js/514.9d956201.chunk.js","mappings":"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","sources":["customHooks/usePagination.js","components/Pagination.js","views/adminUsers/GetUsers.js","../node_modules/classnames/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useMemo } from 'react'\r\n\r\nexport const DOTS = '...'\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1\r\n  return Array.from({ length }, (_, idx) => idx + start)\r\n}\r\n\r\nexport const usePagination = ({ totalCount, pageSize, siblingCount = 1, currentPage }) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize)\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount)\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\r\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount)\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\r\n\r\n    const firstPageIndex = 1\r\n    const lastPageIndex = totalPageCount\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount\r\n      let leftRange = range(1, leftItemCount)\r\n\r\n      return [...leftRange, DOTS, totalPageCount]\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount\r\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount)\r\n      return [firstPageIndex, DOTS, ...rightRange]\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex)\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage])\r\n\r\n  return paginationRange\r\n}\r\n","import React from 'react'\nimport classnames from 'classnames'\nimport PropTypes from 'prop-types'\nimport { DOTS, usePagination } from 'src/customHooks/usePagination'\n\nconst Pagination = (props) => {\n  const { onPageChange, totalCount, siblingCount = 1, currentPage, pageSize, className } = props\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  })\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1)\n  }\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1)\n  }\n\n  let lastPage = paginationRange[paginationRange.length - 1]\n  return (\n    <ul className={classnames('pagination-container', { [className]: className })}>\n      <li\n        className={classnames('pagination-item', {\n          disabled: currentPage === 1,\n        })}\n        onClick={onPrevious}\n      >\n        <div className=\"arrow left\" />\n      </li>\n      {paginationRange.map((pageNumber, i) => {\n        if (pageNumber === DOTS) {\n          return (\n            <li key={i} className=\"pagination-item dots\">\n              &#8230;\n            </li>\n          )\n        }\n\n        return (\n          <li\n            key={i}\n            className={classnames('pagination-item', {\n              selected: pageNumber === currentPage,\n            })}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        )\n      })}\n      <li\n        className={classnames('pagination-item', {\n          disabled: currentPage === lastPage,\n        })}\n        onClick={onNext}\n      >\n        <div className=\"arrow right\" />\n      </li>\n    </ul>\n  )\n}\n\nexport default Pagination\n\nPagination.propTypes = {\n  onPageChange: PropTypes.func,\n  totalCount: PropTypes.number,\n  siblingCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  className: PropTypes.string,\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { useQueryClient } from 'react-query'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport Pagination from 'src/components/Pagination'\r\n\r\nfunction GetUsers() {\r\n  const [limit, setLimit] = useState(2)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const [search, setSearch] = useState('')\r\n  const { isLoading, data: resp } = adminApi.useGetUsers(limit, currentPage, search)\r\n  const totalUsers = resp?.totalUsers\r\n  const users = resp?.users\r\n\r\n  return (\r\n    <div>\r\n      <strong>GetUsers</strong>\r\n      {!isLoading && (\r\n        <Pagination\r\n          className=\"pagination-bar\"\r\n          currentPage={currentPage}\r\n          totalCount={totalUsers}\r\n          pageSize={users?.length}\r\n          onPageChange={(page) => setCurrentPage(page)}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["DOTS","range","start","end","length","Array","from","_","idx","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","className","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","onClick","map","pageNumber","i","selected","useState","limit","setCurrentPage","search","adminApi","isLoading","resp","data","totalUsers","users","page","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default"],"sourceRoot":""}