{"version":3,"file":"static/js/6780.c9a2eab6.chunk.js","mappings":"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","sources":["components/FamilyTree.js","views/users/GetUsers.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport PropTypes from 'prop-types'\r\nimport { adminApi } from 'src/APIs'\r\nimport { cilUser } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport brand from 'src/assets/sonaxmultitrade.png'\r\nimport { CImage } from '@coreui/react'\r\n\r\nexport default function FamilyTree({ item, num, StyledNode, pId }) {\r\n  const navigation = useNavigate()\r\n\r\n  const { childId, parentId } = item\r\n  const resp = childId._id && adminApi.useGetTeams(childId._id).data\r\n  var pD = resp ? resp?.data?.parentId : ''\r\n  var childs = resp ? resp?.data?.childs : []\r\n\r\n  const hasChildren = childs && childs.length !== 0\r\n\r\n  if (hasChildren && resp?.data?.childs[0].placement === 'Right') {\r\n    childs = resp?.data?.childs.reverse()\r\n  }\r\n  const newChild = () => {\r\n    if (hasChildren) {\r\n      return (\r\n        childs &&\r\n        childs.map((child, n) => {\r\n          return <FamilyTree key={n} item={child} num={n} StyledNode={StyledNode} pId={pD} />\r\n        })\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const renderBranch = () => {\r\n    return (\r\n      <StyledNode>\r\n        <div\r\n          role={!childId.uId ? 'button' : ''}\r\n          onClick={() =>\r\n            !childId.uId &&\r\n            navigation('/add', {\r\n              state: {\r\n                pId: typeof pId === 'string' ? pId : parentId,\r\n                placement: num === 0 ? 'Left' : 'Right',\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <CImage src={brand} height={50} alt=\"Logo\" />\r\n          <div\r\n            className={\r\n              !childId.uId\r\n                ? 'border border-success tree-content app-bg-2'\r\n                : 'border border-success tree-content app-bg'\r\n            }\r\n          >\r\n            <div>{childId.uId ? childId.uId : ''}</div>\r\n            <div>{childId.firstName}</div>\r\n          </div>\r\n        </div>\r\n      </StyledNode>\r\n    )\r\n  }\r\n  const StyledTreeExample = () => (\r\n    <TreeNode key={num} label={renderBranch()}>\r\n      {newChild()}\r\n    </TreeNode>\r\n  )\r\n\r\n  return StyledTreeExample()\r\n}\r\n\r\nFamilyTree.propTypes = {\r\n  item: PropTypes.object,\r\n  num: PropTypes.number,\r\n  pId: PropTypes.any,\r\n  StyledNode: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport brand from 'src/assets/sonaxmultitrade.png'\r\nimport FamilyTree from 'src/components/FamilyTree'\r\nimport { CCard, CCardBody, CCardHeader, CCol, CImage, CRow } from '@coreui/react'\r\n\r\nfunction GetUsers() {\r\n  const user = getProfileData()\r\n  const { isLoading, data } = adminApi.useGetTeams(user._id)\r\n  var childs = data?.data?.childs\r\n  if (data?.data?.childs[0].placement === 'Right') {\r\n    childs = data?.data?.childs.reverse()\r\n  }\r\n\r\n  const StyledNode = styled.div`\r\n    padding: 5px;\r\n    display: inline-block;\r\n  `\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>All Team&apos;s Tree</strong>\r\n          </CCardHeader>\r\n          <CCardBody className=\"divScroll\">\r\n            <Tree\r\n              lineWidth={'2px'}\r\n              lineColor={'green'}\r\n              lineBorderRadius={'10px'}\r\n              label={\r\n                <StyledNode>\r\n                  <CImage src={brand} height={50} alt=\"Logo\" />\r\n                  <div className=\"border border-success tree-content app-bg\">\r\n                    <div>{user.uId ? user.uId : ''}</div>\r\n                    <div>{user.firstName}</div>\r\n                  </div>\r\n                </StyledNode>\r\n              }\r\n            >\r\n              {childs &&\r\n                childs?.map((child, n) => {\r\n                  return (\r\n                    <FamilyTree\r\n                      key={n}\r\n                      item={child}\r\n                      num={n}\r\n                      StyledNode={StyledNode}\r\n                      pId={data?.data.parentId}\r\n                    />\r\n                  )\r\n                })}\r\n            </Tree>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n"],"names":["FamilyTree","item","num","StyledNode","pId","navigation","useNavigate","childId","parentId","resp","_id","adminApi","data","pD","childs","hasChildren","length","placement","reverse","label","role","uId","onClick","state","src","brand","height","alt","className","firstName","map","child","n","user","getProfileData","isLoading","styled","xs","lineWidth","lineColor","lineBorderRadius"],"sourceRoot":""}