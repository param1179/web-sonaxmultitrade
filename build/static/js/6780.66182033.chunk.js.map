{"version":3,"file":"static/js/6780.66182033.chunk.js","mappings":"yRAUe,SAASA,EAAW,GAA4B,IAAD,QAGxDC,EAH+BC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WACxCC,GAAaC,EAAAA,EAAAA,MAGXC,EAAiCL,EAAjCK,QAAoBC,GAAaN,EAAxBO,UAAwBP,EAAbM,UACxBD,EAAQG,MACVT,EAAOU,EAAAA,EAAAA,YAAqBJ,EAAQG,KAAKE,MAG3C,IACiD,IAD7CC,EAAa,QAAP,EAAGZ,SAAI,OAAM,QAAN,EAAJ,EAAMW,YAAI,WAAN,EAAJ,EAAYC,OACe,WAAhC,QAAJ,EAAAZ,SAAI,OAAM,QAAN,EAAJ,EAAMW,YAAI,WAAN,EAAJ,EAAYC,OAAO,GAAGJ,aACxBI,EAAa,QAAP,EAAGZ,SAAI,OAAM,QAAN,EAAJ,EAAMW,YAAI,WAAN,EAAJ,EAAYC,OAAOC,WAG9B,IAAMC,EAAcF,GAA4B,IAAlBA,EAAOG,OAyCrC,OALE,SAAC,IAAQ,CAAWC,OAtBlB,SAACb,EAAU,WACT,iBACEc,KAAK,SACLC,QAAS,kBACPd,EAAW,OAAQ,CACjBe,MAAO,CACLC,IAAY,OAAPd,QAAO,IAAPA,GAAAA,EAASG,IAAa,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,IAAMF,EACnCC,UAAmB,IAARN,EAAY,OAAS,UAElC,EACH,WAED,SAAC,IAAK,CAACmB,UAAU,uBAAuBC,KAAMC,EAAAA,EAASC,OAAQ,MAC/D,2BACGlB,EAAQmB,IAAMnB,EAAQmB,IAAM,GAAE,YACzBnB,EAAQoB,UAAS,aAOW,SAjCtCZ,EACKF,EAAOe,KAAI,SAACC,EAAOC,GACxB,OAAO,SAAC9B,EAAU,CAASE,KAAM2B,EAAO1B,IAAK2B,EAAG1B,WAAYA,GAApC0B,EAC1B,IAEO,MA4BM3B,EAMnB,CCdA,MA3CA,WAAqB,IAAD,MAI+B,EAH3C4B,GAAOC,EAAAA,EAAAA,kBACb,EAA4BrB,EAAAA,EAAAA,YAAqBoB,EAAKrB,KAAnCE,GAAF,EAATqB,UAAe,EAAJrB,MACfC,EAAa,OAAJD,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYC,OACe,WAAhC,OAAJD,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYC,OAAO,GAAGJ,aACxBI,EAAa,OAAJD,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYC,OAAOC,WAG9B,IAAMV,EAAa8B,EAAAA,GAAAA,IAAU,8HAO7B,OACE,4BACE,4BAAQ,eAER,SAAC,IAAI,CACHC,UAAW,MACXC,UAAW,QACXC,iBAAkB,OAClBpB,OACE,SAACb,EAAU,WACT,4BACE,SAAC,IAAK,CAACkB,UAAU,uBAAuBC,KAAMC,EAAAA,EAASC,OAAQ,MAC/D,2BACGM,EAAKL,IAAMK,EAAKL,IAAM,GAAE,YACnBK,EAAKJ,UAAS,aAI3B,SAEM,QAFN,EAEAd,SAAM,aAAN,EAAQe,KAAI,SAACC,EAAOC,GACnB,OAAO,SAAC9B,EAAU,CAASE,KAAM2B,EAAO1B,IAAK2B,EAAG1B,WAAYA,GAApC0B,EAC1B,QAIR,C","sources":["components/FamilyTree.js","views/users/GetUsers.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { adminApi } from 'src/APIs'\r\nimport { cilUser } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function FamilyTree({ item, num, StyledNode }) {\r\n  const navigation = useNavigate()\r\n\r\n  var resp\r\n  const { childId, placement, parentId } = item\r\n  if (childId._id) {\r\n    resp = adminApi.useGetTeams(childId._id).data\r\n  }\r\n\r\n  var childs = resp?.data?.childs\r\n  if (resp?.data?.childs[0].placement === 'Right') {\r\n    childs = resp?.data?.childs.reverse()\r\n  }\r\n\r\n  const hasChildren = childs && childs.length !== 0\r\n\r\n  const newChild = () => {\r\n    if (hasChildren) {\r\n      return childs.map((child, n) => {\r\n        return <FamilyTree key={n} item={child} num={n} StyledNode={StyledNode} />\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderBranch = () => {\r\n    return (\r\n      <StyledNode>\r\n        <div\r\n          role=\"button\"\r\n          onClick={() =>\r\n            navigation('/add', {\r\n              state: {\r\n                pId: childId?._id ? childId?._id : parentId,\r\n                placement: num === 0 ? 'Left' : 'Right',\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <CIcon className=\"sidebar-brand-narrow\" icon={cilUser} height={50} />\r\n          <div>\r\n            {childId.uId ? childId.uId : ''}\r\n            {` (${childId.firstName})`}\r\n          </div>\r\n        </div>\r\n      </StyledNode>\r\n    )\r\n  }\r\n  const StyledTreeExample = () => (\r\n    <TreeNode key={num} label={renderBranch()}>\r\n      {newChild()}\r\n    </TreeNode>\r\n  )\r\n\r\n  return StyledTreeExample()\r\n}\r\n\r\nFamilyTree.propTypes = {\r\n  item: PropTypes.object,\r\n  num: PropTypes.number,\r\n  StyledNode: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilUser } from '@coreui/icons'\r\nimport FamilyTree from 'src/components/FamilyTree'\r\n\r\nfunction GetUsers() {\r\n  const user = getProfileData()\r\n  const { isLoading, data } = adminApi.useGetTeams(user._id)\r\n  var childs = data?.data?.childs\r\n  if (data?.data?.childs[0].placement === 'Right') {\r\n    childs = data?.data?.childs.reverse()\r\n  }\r\n\r\n  const StyledNode = styled.div`\r\n    padding: 5px;\r\n    border-radius: 8px;\r\n    display: inline-block;\r\n    border: 1px solid red;\r\n  `\r\n\r\n  return (\r\n    <div>\r\n      <strong>All Teams</strong>\r\n\r\n      <Tree\r\n        lineWidth={'2px'}\r\n        lineColor={'green'}\r\n        lineBorderRadius={'10px'}\r\n        label={\r\n          <StyledNode>\r\n            <div>\r\n              <CIcon className=\"sidebar-brand-narrow\" icon={cilUser} height={50} />\r\n              <div>\r\n                {user.uId ? user.uId : ''}\r\n                {` (${user.firstName})`}\r\n              </div>\r\n            </div>\r\n          </StyledNode>\r\n        }\r\n      >\r\n        {childs?.map((child, n) => {\r\n          return <FamilyTree key={n} item={child} num={n} StyledNode={StyledNode} />\r\n        })}\r\n      </Tree>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n"],"names":["FamilyTree","resp","item","num","StyledNode","navigation","useNavigate","childId","parentId","placement","_id","adminApi","data","childs","reverse","hasChildren","length","label","role","onClick","state","pId","className","icon","cilUser","height","uId","firstName","map","child","n","user","getProfileData","isLoading","styled","lineWidth","lineColor","lineBorderRadius"],"sourceRoot":""}