{"version":3,"file":"static/js/9191.5c5a5d63.chunk.js","mappings":"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","sources":["components/AppToaster.js","conts/helper.js","validators/auth.schema.js","views/users/DirectRegister.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\n\nconst AppToaster = ({ color, content }) => {\n  return (\n    <CToast color={color}>\n      <CToastHeader closeButton>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">Sonax Multitrade</strong>\n        <small>0 min ago</small>\n      </CToastHeader>\n      <CToastBody>{content}</CToastBody>\n    </CToast>\n  )\n}\n\nexport default AppToaster\nAppToaster.propTypes = {\n  color: PropTypes.string,\n  content: PropTypes.string,\n}\n","export const HELP = {\n  PASSWORD_REGEXP: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n  EMAIL_REGEXP: /^((?!\\.)[\\w\\-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/,\n  phoneRegExp:\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n}\n","import { HELP } from '../conts'\nimport * as yup from 'yup'\n\nexport const signIn = yup.object().shape({\n  email: yup\n    .string()\n    .matches(HELP.EMAIL_REGEXP, 'Email is not correct!')\n    .required('Email is require field!'),\n  password: yup\n    .string()\n    .matches(HELP.PASSWORD_REGEXP, 'Password is not correct!')\n    .max(15, 'Max 15 symbol!')\n    .required('Password is require field!'),\n})\n\nexport const signUp = yup.object().shape({\n  password: yup\n    .string()\n    .matches(HELP.PASSWORD_REGEXP, 'Password is not correct!')\n    .max(15, 'Max 15 symbol!')\n    .required('Password is require field!'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match!')\n    .required('Passwords must match!'),\n})\n\nexport const createAdmin = yup.object().shape({\n  email: yup\n    .string()\n    .matches(HELP.EMAIL_REGEXP, 'Email is not correct!')\n    .required('Email is require field!'),\n  password: yup\n    .string()\n    .matches(HELP.PASSWORD_REGEXP, 'Password is not correct!')\n    .max(15, 'Max 15 symbol!')\n    .required('Password is require field!'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match!')\n    .required('Passwords must match!'),\n})\n\nexport const createUser = yup.object().shape({\n  firstName: yup.string().required('First name is require field!'),\n  lastName: yup.string().required('Last name is require field!'),\n  gender: yup.string().required('Last name is require field!'),\n  dob: yup.date().required('Date of birth required'),\n  nomineeFirstName: yup.string().required('First name is require field!'),\n  nomineeLastName: yup.string().required('First name is require field!'),\n  nomineeDob: yup.date().required('Date of birth required'),\n  nomineeRelation: yup.string().required('Relation is require field!'),\n  mobile: yup\n    .string()\n    .matches(HELP.phoneRegExp, 'Phone number is not valid')\n    .required('Mobile is require field!')\n    .min(10, 'Phone number too short')\n    .max(10, 'Phone number too long'),\n  email: yup\n    .string()\n    .matches(HELP.EMAIL_REGEXP, 'Email is not correct!')\n    .required('Email is require field!'),\n  password: yup.string().max(15, 'Max 15 symbol!').required('Password is require field!'),\n  cpassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match!')\n    .required('Passwords must match!'),\n})\n\nexport const createCoupone = yup.object().shape({\n  code: yup.string().max(30, 'Max value 20.').required('Coupon Name is require field!'),\n  percent: yup\n    .number()\n    .typeError('You must specify a number')\n    .min(1, 'Min value 1.')\n    .max(100, 'Max value 100.')\n    .required('This field is required!'),\n  endDate: yup.date().min(new Date(), \"end date can't be before current date\"),\n})\n\nexport const createSchool = yup.object().shape({\n  email: yup\n    .string()\n    .matches(HELP.EMAIL_REGEXP, 'Email is not correct!')\n    .required('Email is require field!'),\n  schoolName: yup.string().required('Name is require field!'),\n})\n\nexport const userSignIn = yup.object().shape({\n  uId: yup.string().required('UID is require field!'),\n  password: yup.string().max(15, 'Max 15 symbol!').required('Password is require field!'),\n})\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CHeader,\r\n  CRow,\r\n  CToaster,\r\n} from '@coreui/react'\r\nimport { useFormik } from 'formik'\r\nimport React, { useRef, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { usersApi } from 'src/APIs'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport { authSchema } from 'src/validators'\r\nimport AppToaster from 'src/components/AppToaster'\r\n\r\nconst vars = {\r\n  '--cui-header-bg': '#E4e4e4',\r\n}\r\n\r\nconst DirectRegister = () => {\r\n  const navigation = useNavigate()\r\n  const toaster = useRef()\r\n  const [toast, addToast] = useState(0)\r\n  const user = getProfileData()\r\n  const { isLoading, data: packages } = usersApi.useGetPackages()\r\n\r\n  const { values, handleChange, submitForm, errors, isValid, dirty, resetForm } = useFormik({\r\n    initialValues: {\r\n      parentId: '',\r\n      sponserId: user && user._id,\r\n      packageId: packages?.data[0]._id,\r\n      placement: 'Left',\r\n      firstName: '',\r\n      lastName: '',\r\n      dob: '',\r\n      mobile: '',\r\n      email: '',\r\n      gender: 'Male',\r\n      activeUser: 'Active',\r\n      password: '',\r\n      cpassword: '',\r\n      spouseOrFather: '',\r\n      nomineeFirstName: '',\r\n      nomineeLastName: '',\r\n      nomineeDob: '',\r\n      nomineeRelation: '',\r\n      locality: '',\r\n      city: '',\r\n      district: '',\r\n      state: '',\r\n      pin: '',\r\n      country: '',\r\n    },\r\n    validationSchema: authSchema.createUser,\r\n    onSubmit: (values) => onCreate(values),\r\n  })\r\n\r\n  const mutateCreate = usersApi.useRegisterUser()\r\n\r\n  const onCreate = async (body) => {\r\n    const resp = await mutateCreate.mutateAsync(body)\r\n    if (resp?.status === 200) {\r\n      resetForm()\r\n      addToast(AppToaster({ color: '', content: 'User added!' }))\r\n      navigation('/users')\r\n    }\r\n  }\r\n\r\n  return <CRow>hello</CRow>\r\n}\r\n\r\nexport default DirectRegister\r\n"],"names":["color","content","closeButton","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","HELP","signIn","yup","shape","email","matches","required","password","max","createUser","confirmPassword","oneOf","firstName","lastName","gender","dob","nomineeFirstName","nomineeLastName","nomineeDob","nomineeRelation","mobile","min","cpassword","createCoupone","code","percent","typeError","endDate","Date","createSchool","schoolName","userSignIn","uId","navigation","useNavigate","useRef","useState","addToast","user","getProfileData","usersApi","packages","isLoading","data","useFormik","initialValues","parentId","sponserId","_id","packageId","placement","activeUser","spouseOrFather","locality","city","district","state","pin","country","validationSchema","authSchema","onSubmit","values","onCreate","resetForm","handleChange","submitForm","errors","isValid","dirty","mutateCreate","body","mutateAsync","resp","status","AppToaster"],"sourceRoot":""}