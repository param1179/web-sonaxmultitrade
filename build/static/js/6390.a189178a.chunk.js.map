{"version":3,"file":"static/js/6390.a189178a.chunk.js","mappings":"sOAkEA,UA1DA,WACE,IAAMA,GAAaC,EAAAA,EAAAA,MACbC,GAAOC,EAAAA,EAAAA,kBACb,EAA4BC,EAAAA,EAAAA,cAATC,GAAF,EAATC,UAAe,EAAJD,MACbE,EAAaC,EAAAA,GAAAA,IAAU,8HAOvBC,EAAoB,WAAH,aACrB,SAAC,IAAI,CACHC,UAAW,MACXC,UAAW,QACXC,iBAAkB,OAClBC,OAAO,SAACN,EAAU,UAAEL,EAAKY,UAAY,IAAMZ,EAAKa,WAAuB,SAElE,OAAJV,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYW,KAAI,SAACC,EAAKC,GACrB,IAAIC,EAASF,EAAIE,OAIjB,MAHgC,UAA5BF,EAAIE,OAAO,GAAGC,YAChBD,EAASF,EAAIE,OAAOE,WAEfF,EAAOH,KAAI,SAACM,EAAOC,GACxB,OACE,SAAC,IAAQ,CAEPV,OACE,SAACN,EAAU,WACT,gBACEiB,QAAS,0BACPxB,EAAW,OAAQ,CACjByB,MAAO,CACLC,IAAkB,QAAb,EAAAJ,EAAMK,eAAO,OAAb,EAAeC,IAAmB,QAAhB,EAAGN,EAAMK,eAAO,aAAb,EAAeC,IAAM1B,EAAK0B,IACpDR,UAAiB,IAANG,EAAU,OAAS,UAEhC,EACH,SAEAD,EAAMK,QAAQE,IAAG,YAAQP,EAAMK,QAAQb,UAAS,UAblDS,EAmBX,GACF,KACK,EAGT,OACE,4BACE,4BAAQ,eACR,SAACd,EAAiB,MAGxB,C","sources":["views/users/GetUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useQueryClient } from 'react-query'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction GetUsers() {\r\n  const navigation = useNavigate()\r\n  const user = getProfileData()\r\n  const { isLoading, data } = adminApi.useGetTeams()\r\n  const StyledNode = styled.div`\r\n    padding: 5px;\r\n    border-radius: 8px;\r\n    display: inline-block;\r\n    border: 1px solid red;\r\n  `\r\n\r\n  const StyledTreeExample = () => (\r\n    <Tree\r\n      lineWidth={'2px'}\r\n      lineColor={'green'}\r\n      lineBorderRadius={'10px'}\r\n      label={<StyledNode>{user.firstName + ' ' + user.lastName}</StyledNode>}\r\n    >\r\n      {data?.data?.map((res, i) => {\r\n        var childs = res.childs\r\n        if (res.childs[0].placement === 'Right') {\r\n          childs = res.childs.reverse()\r\n        }\r\n        return childs.map((child, n) => {\r\n          return (\r\n            <TreeNode\r\n              key={n}\r\n              label={\r\n                <StyledNode>\r\n                  <div\r\n                    onClick={() =>\r\n                      navigation('/add', {\r\n                        state: {\r\n                          pId: child.childId?._id ? child.childId?._id : user._id,\r\n                          placement: n === 0 ? 'Left' : 'Right',\r\n                        },\r\n                      })\r\n                    }\r\n                  >\r\n                    {child.childId.uId + ` (${child.childId.firstName})`}\r\n                  </div>\r\n                </StyledNode>\r\n              }\r\n            />\r\n          )\r\n        })\r\n      })}\r\n    </Tree>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <strong>All Teams</strong>\r\n      <StyledTreeExample />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n"],"names":["navigation","useNavigate","user","getProfileData","adminApi","data","isLoading","StyledNode","styled","StyledTreeExample","lineWidth","lineColor","lineBorderRadius","label","firstName","lastName","map","res","i","childs","placement","reverse","child","n","onClick","state","pId","childId","_id","uId"],"sourceRoot":""}