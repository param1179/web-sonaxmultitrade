{"version":3,"file":"static/js/6780.33b44b16.chunk.js","mappings":"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","sources":["components/FamilyTree.js","views/users/GetUsers.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { Tree, TreeNode } from 'react-organizational-chart'\r\nimport PropTypes from 'prop-types'\r\nimport { adminApi } from 'src/APIs'\r\nimport { cilUser } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport brand from 'src/assets/sonaxmultitrade.png'\r\nimport { CImage } from '@coreui/react'\r\n\r\nfunction FamilyTree({ item, num, StyledNode, pId }) {\r\n  const navigation = useNavigate()\r\n  const { childId, parentId } = item\r\n  const renderBranch = () => {\r\n    return (\r\n      <StyledNode>\r\n        <div\r\n          role={!childId.uId ? 'button' : ''}\r\n          onClick={() =>\r\n            !childId.uId &&\r\n            navigation('/add', {\r\n              state: {\r\n                pId: typeof pId === 'string' ? pId : parentId,\r\n                placement: num === 0 ? 'Left' : 'Right',\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <CImage src={brand} height={50} alt=\"Logo\" />\r\n          <div\r\n            className={\r\n              !childId.uId\r\n                ? 'border border-success tree-content app-bg-2'\r\n                : 'border border-success tree-content app-bg'\r\n            }\r\n          >\r\n            <div>{childId.uId ? childId.uId : ''}</div>\r\n            <div>{childId.firstName}</div>\r\n          </div>\r\n        </div>\r\n      </StyledNode>\r\n    )\r\n  }\r\n\r\n  const { isloading, data: resp } = adminApi.useGetTeams(childId._id)\r\n  var pD = resp?.status === 200 && resp?.data?.parentId\r\n  var childs = resp?.status === 200 ? resp?.data?.childs : []\r\n\r\n  const hasChildren = childs && childs.length !== 0\r\n\r\n  if (hasChildren && resp?.data?.childs[0].placement === 'Right') {\r\n    childs = resp?.data?.childs.reverse()\r\n  }\r\n\r\n  const newChild = () => {\r\n    if (hasChildren) {\r\n      return childs.map((child, n) => {\r\n        return isloading ? (\r\n          <>OK</>\r\n        ) : (\r\n          <FamilyTree key={n} item={child} num={n} StyledNode={StyledNode} pId={pD} />\r\n        )\r\n      })\r\n    }\r\n    return null\r\n  }\r\n\r\n  const StyledTreeExample = () => (\r\n    <TreeNode key={num} label={renderBranch()}>\r\n      {newChild()}\r\n    </TreeNode>\r\n  )\r\n\r\n  return StyledTreeExample()\r\n}\r\n\r\nexport default FamilyTree\r\n\r\nFamilyTree.propTypes = {\r\n  item: PropTypes.object,\r\n  num: PropTypes.number,\r\n  pId: PropTypes.any,\r\n  StyledNode: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { adminApi } from 'src/APIs'\r\nimport { Tree } from 'react-organizational-chart'\r\nimport styled from 'styled-components'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport brand from 'src/assets/sonaxmultitrade.png'\r\nimport FamilyTree from 'src/components/FamilyTree'\r\nimport { CCard, CCardBody, CCardHeader, CCol, CImage, CRow } from '@coreui/react'\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  display: inline-block;\r\n`\r\nfunction GetUsers() {\r\n  const user = getProfileData()\r\n  const { isLoading, data } = adminApi.useGetTeams(user._id)\r\n  var childs = data?.data?.childs\r\n  if (data?.data?.childs[0].placement === 'Right') {\r\n    childs = data?.data?.childs.reverse()\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>All Team&apos;s Tree</strong>\r\n          </CCardHeader>\r\n          <CCardBody className=\"divScroll\">\r\n            <Tree\r\n              lineWidth={'2px'}\r\n              lineColor={'green'}\r\n              lineBorderRadius={'10px'}\r\n              label={\r\n                <StyledNode>\r\n                  <CImage src={brand} height={50} alt=\"Logo\" />\r\n                  <div className=\"border border-success tree-content app-bg\">\r\n                    <div>{user.uId ? user.uId : ''}</div>\r\n                    <div>{user.firstName}</div>\r\n                  </div>\r\n                </StyledNode>\r\n              }\r\n            >\r\n              {childs &&\r\n                childs?.map((child, n) => {\r\n                  return (\r\n                    <FamilyTree\r\n                      key={n}\r\n                      item={child}\r\n                      num={n}\r\n                      StyledNode={StyledNode}\r\n                      pId={data?.data.parentId}\r\n                    />\r\n                  )\r\n                })}\r\n            </Tree>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default GetUsers\r\n"],"names":["FamilyTree","item","num","StyledNode","pId","navigation","useNavigate","childId","parentId","adminApi","_id","isloading","resp","data","pD","status","childs","hasChildren","length","placement","reverse","label","role","uId","onClick","state","src","brand","height","alt","className","firstName","map","child","n","styled","user","getProfileData","isLoading","xs","lineWidth","lineColor","lineBorderRadius"],"sourceRoot":""}