{"version":3,"file":"static/js/349.ee2528d9.chunk.js","mappings":"sOAuGA,UAjFgB,WACd,IAAMA,GAAUC,EAAAA,EAAAA,kBAChB,GAAoCC,EAAAA,EAAAA,UAAS,GAAE,eAAxCC,EAAU,KAAEC,EAAa,KAChC,GAAsCF,EAAAA,EAAAA,UAAS,GAAE,eAA1CG,EAAW,KAAEC,EAAc,KAClC,GAA0BJ,EAAAA,EAAAA,UAAS,GAAE,eAA9BK,EAAK,KAAEC,EAAQ,KACtB,EAA2CC,EAAAA,GAAAA,gBAAxBC,EAAI,EAAfC,UAAuBC,EAAO,EAAbC,MACzBC,EAAAA,EAAAA,YAAU,WACgB,aAavB,OAbuB,0BAAxB,mGACQC,EAAAA,EAAAA,IACC,kBAAD,OAAmBf,EAAQgB,IAAG,mBACjCC,MAAK,SAACC,GACLd,EAAsB,OAARc,QAAQ,IAARA,OAAQ,EAARA,EAAUC,OAC1B,IACCF,KAAI,yCACH,WAAOG,GAAiB,sFAChBL,EAAAA,EAAAA,IAAU,kBAAD,OAAmBf,EAAQgB,IAAG,oBAAkB,sIAF9D,IAIJC,MAAK,SAACC,GACLZ,EAAuB,OAARY,QAAQ,IAARA,OAAQ,EAARA,EAAUC,OAC3B,IAAE,2CACL,yBAdc,WACS,wBAcxBE,EACF,GAAG,KAEHP,EAAAA,EAAAA,YAAU,WACRQ,GACF,GAAG,CAACjB,IAEJ,IAAMiB,EAAW,WACf,IAAMC,EAAWlB,GAAeF,EAAaE,EAAcF,EACrDqB,EAAOC,KAAKC,MAAkB,EAAXH,EAAgB,GACzCf,EAASgB,EACX,EAEA,OACE,SAAC,KAAI,WACH,SAAC,KAAI,CAACG,GAAI,GAAG,UACX,UAAC,KAAK,YACJ,UAAC,KAAW,YACV,4BAAQ,aACR,UAAC,KAAM,CAACC,MAAM,UAAUC,UAAU,iBAAgB,UAAC,gBACnCtB,GAASA,MAEzB,UAAC,KAAM,CAACqB,MAAM,UAAUC,UAAU,iBAAgB,UAAC,iBAClCxB,MAEjB,UAAC,KAAM,CAACuB,MAAM,UAAUC,UAAU,iBAAgB,UAAC,gBACnC1B,SAGlB,SAAC,KAAS,WACR,gBAAK0B,UAAU,GAAE,UACf,eAAIA,UAAU,WAAU,UACpBnB,GACAE,EAAQA,QAAQkB,KAAI,SAACC,EAAKC,GAAC,OACzB,gBAAYH,UAAWE,EAAIE,SAAW1B,EAAQ,SAAW,GAAG,WAC1D,eACEsB,UACEE,EAAIE,SAAW1B,EAAQ,2BAA6B,cACrD,UAEAwB,EAAIG,YAAY,OAAKH,EAAIE,QAAQ,aAEpC,eACEJ,UACEE,EAAIE,SAAW1B,EAAQ,2BAA6B,cACrD,UACF,IACGwB,EAAII,OAAO,SAbRH,EAeJ,gBASzB,C","sources":["views/users/Rewards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { usersApi } from 'src/APIs'\r\nimport { getProfileData } from 'src/helpers/tokenLS'\r\nimport axios from 'src/axios'\r\n\r\nconst Rewards = () => {\r\n  const profile = getProfileData()\r\n  const [leftActive, setLeftActive] = useState(0)\r\n  const [rightActive, setRightActive] = useState(0)\r\n  const [pairs, setPairs] = useState(0)\r\n  const { isLoading: load, data: rewards } = usersApi.useGetRewards()\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(`users/teamList/${profile._id}?position=Left`)\r\n        .then((response) => {\r\n          setLeftActive(response?.active)\r\n        })\r\n        .then(\r\n          async (casesHeaderFields) =>\r\n            await axios.get(`users/teamList/${profile._id}?position=Right`),\r\n        )\r\n        .then((response) => {\r\n          setRightActive(response?.active)\r\n        })\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getPairs()\r\n  }, [rightActive])\r\n\r\n  const getPairs = () => {\r\n    const lessSide = rightActive <= leftActive ? rightActive : leftActive\r\n    const pair = Math.floor((lessSide * 2) / 2)\r\n    setPairs(pair)\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <strong>Rewards</strong>\r\n            <CBadge color=\"success\" className=\"float-end mx-2\">\r\n              Total Pairs: {pairs && pairs}\r\n            </CBadge>\r\n            <CBadge color=\"success\" className=\"float-end mx-2\">\r\n              Right Active: {rightActive}\r\n            </CBadge>\r\n            <CBadge color=\"success\" className=\"float-end mx-2\">\r\n              Left Active: {leftActive}\r\n            </CBadge>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <div className=\"\">\r\n              <ul className=\"timeline\">\r\n                {!load &&\r\n                  rewards.rewards.map((res, i) => (\r\n                    <li key={i} className={res.onPairs <= pairs ? 'achive' : ''}>\r\n                      <p\r\n                        className={\r\n                          res.onPairs <= pairs ? 'text-success float-right' : 'float-right'\r\n                        }\r\n                      >\r\n                        {res.rewardLevel} on {res.onPairs} Pairs\r\n                      </p>\r\n                      <p\r\n                        className={\r\n                          res.onPairs <= pairs ? 'text-success float-right' : 'float-right'\r\n                        }\r\n                      >\r\n                        ({res.reward})\r\n                      </p>\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Rewards\r\n"],"names":["profile","getProfileData","useState","leftActive","setLeftActive","rightActive","setRightActive","pairs","setPairs","usersApi","load","isLoading","rewards","data","useEffect","axios","_id","then","response","active","casesHeaderFields","fetchData","getPairs","lessSide","pair","Math","floor","md","color","className","map","res","i","onPairs","rewardLevel","reward"],"sourceRoot":""}