{"version":3,"file":"static/js/217.68adc39b.chunk.js","mappings":"sPA8HA,UA/GA,WACE,IAAMA,EAAO,IAAIC,KACXC,EAAW,IAAID,KACnBD,EAAKG,eAAe,QAAS,CAC3BC,SAAU,sBAEZC,UAEF,GAAoCC,EAAAA,EAAAA,UAASJ,GAAS,eAA/CK,EAAU,KAAEC,EAAa,KAChC,EAAkCC,EAAAA,EAAAA,YAAqBF,GAA/CG,EAAS,EAATA,UAAiBC,EAAI,EAAVC,KAEnB,SAASC,EAAQC,GACf,IAAId,EAAO,IAAIC,KAAKa,GAAGC,mBAAmB,QAAS,CAAEC,IAAK,YACtDC,EAAQ,IAAIhB,KAAKa,GAAGC,mBAAmB,QAAS,CAAEE,MAAO,SAE7D,MADmB,UAAMjB,EAAI,YAAIiB,EAEnC,CAEA,SAASC,EAAkBJ,GACzB,IAAId,EAAO,IAAIC,KAAKa,GAChBE,EAAMhB,EAAKmB,SACXC,EAAa,IAAInB,KAAKa,GAM1B,OALsB,IAAlBd,EAAKmB,SACPC,EAAWC,QAAQrB,EAAKa,UAAY,GAEpCO,EAAWC,QAAQrB,EAAKa,WAAaG,EAAM,IAEtCI,CACT,CASA,OACE,SAAC,KAAI,CAACE,UAAU,YAAW,UACzB,SAAC,KAAI,CAACC,GAAI,GAAG,UACX,UAAC,KAAI,YACH,SAAC,KAAI,CAACA,GAAI,EAAE,UACV,UAAC,KAAK,CAACD,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,sDAEF,SAAC,KAAS,WACR,SAAC,KAAK,CAACA,UAAU,SAAQ,UACvB,iBAAKA,UAAU,OAAM,WACnB,SAAC,KAAU,CAACE,QAAQ,2BAA0B,2BAC9C,SAAC,KAAU,CACTF,UAAU,OACVG,KAAK,QACLC,KAAK,OACLC,GAAG,oBACHC,MAAK,iBAAYf,EAAQX,GAAS,KAClC2B,MAAO3B,EACP4B,SAAU,SAACC,GAAC,OAAKvB,EAAcuB,EAAEC,OAAOH,MAAM,EAC9CI,gBAAgB,KAElB,SAAC,KAAU,CACTX,UAAU,OACVG,KAAK,QACLC,KAAK,OACLC,GAAG,2BACHC,MAAK,qBAAgBf,EAAQK,EAAkBhB,IAAU,YACzD2B,MAAOX,EAAkBhB,GAAUG,UACnCyB,SAAU,SAACC,GAAC,OAAKvB,EAAcuB,EAAEC,OAAOH,MAAM,KAEhD,SAAC,KAAU,CACTP,UAAU,OACVG,KAAK,QACLC,KAAK,OACLC,GAAG,4BACHC,MAAK,sBAAiB,IAAI3B,KAAKC,GAAUa,mBAAmB,QAAS,CACnEE,MAAO,SACP,KACFY,MA/CpB,SAAkBf,GAChB,IAAId,EAAO,IAAIC,KAAKa,GAGpB,OAFe,IAAIb,KAAKD,EAAKkC,cAAelC,EAAKmC,WAAY,EAG/D,CA0C2BA,CAASjC,GAAUG,UAC1ByB,SAAU,SAACC,GAAC,OAAKvB,EAAcuB,EAAEC,OAAOH,MAAM,iBAO1D,SAAC,KAAI,CAACN,GAAI,EAAE,UACV,UAAC,KAAK,CAACD,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,mDAEF,SAAC,KAAS,UACPZ,GACC,+BACE,SAAC,KAAQ,CAAC0B,MAAM,UAAUC,QAAQ,YAGpC,SAAC,KAAI,WACH,SAAC,KAAI,CAACf,UAAU,YAAW,UACzB,SAAC,KAAa,CAACV,KAAU,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAAMF,UAAWA,qBAWlE,C","sources":["views/users/activities.js"],"sourcesContent":["import {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormLabel,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport React, { useState } from 'react'\nimport { adminApi } from 'src/APIs'\nimport { ActivityTable } from 'src/components'\n\nfunction Activities() {\n  const date = new Date()\n  const EST_TIME = new Date(\n    date.toLocaleString('en-US', {\n      timeZone: 'America/New_York',\n    }),\n  ).getTime()\n\n  const [filterDate, setFilterDate] = useState(EST_TIME)\n  const { isLoading, data: resp } = adminApi.useActivity(filterDate)\n\n  function getDate(d) {\n    let date = new Date(d).toLocaleDateString('en-us', { day: 'numeric' })\n    let month = new Date(d).toLocaleDateString('en-us', { month: 'long' })\n    const FormattedDate = `${date}-${month}`\n    return FormattedDate\n  }\n\n  function getPreviousMonday(d) {\n    var date = new Date(d)\n    var day = date.getDay()\n    var prevMonday = new Date(d)\n    if (date.getDay() === 0) {\n      prevMonday.setDate(date.getDate() - 7)\n    } else {\n      prevMonday.setDate(date.getDate() - (day - 1))\n    }\n    return prevMonday\n  }\n\n  function getMonth(d) {\n    var date = new Date(d)\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1)\n    //var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    return firstDay\n  }\n\n  return (\n    <CRow className=\"mt-4 mb-4\">\n      <CCol xs={12}>\n        <CRow>\n          <CCol xs={3}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>Activities Filters</strong>\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"d-flex\">\n                  <div className=\"mb-3\">\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Filter Types</CFormLabel>\n                    <CFormCheck\n                      className=\"mb-3\"\n                      type=\"radio\"\n                      name=\"type\"\n                      id=\"flexRadioDisabled\"\n                      label={`Today (${getDate(EST_TIME)})`}\n                      value={EST_TIME}\n                      onChange={(e) => setFilterDate(e.target.value)}\n                      defaultChecked={true}\n                    />\n                    <CFormCheck\n                      className=\"mb-3\"\n                      type=\"radio\"\n                      name=\"type\"\n                      id=\"flexRadioCheckedDisabled\"\n                      label={`This Week (${getDate(getPreviousMonday(EST_TIME))} Onward)`}\n                      value={getPreviousMonday(EST_TIME).getTime()}\n                      onChange={(e) => setFilterDate(e.target.value)}\n                    />\n                    <CFormCheck\n                      className=\"mb-3\"\n                      type=\"radio\"\n                      name=\"type\"\n                      id=\"flexRadioCheckedDisabled1\"\n                      label={`This Month (${new Date(EST_TIME).toLocaleDateString('en-us', {\n                        month: 'long',\n                      })})`}\n                      value={getMonth(EST_TIME).getTime()}\n                      onChange={(e) => setFilterDate(e.target.value)}\n                    />\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs={9}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>User Activities</strong>\n              </CCardHeader>\n              <CCardBody>\n                {isLoading ? (\n                  <>\n                    <CSpinner color=\"primary\" variant=\"grow\" />\n                  </>\n                ) : (\n                  <CRow>\n                    <CRow className=\"table-row\">\n                      <ActivityTable data={resp?.data} isLoading={isLoading} />\n                    </CRow>\n                  </CRow>\n                )}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Activities\n"],"names":["date","Date","EST_TIME","toLocaleString","timeZone","getTime","useState","filterDate","setFilterDate","adminApi","isLoading","resp","data","getDate","d","toLocaleDateString","day","month","getPreviousMonday","getDay","prevMonday","setDate","className","xs","htmlFor","type","name","id","label","value","onChange","e","target","defaultChecked","getFullYear","getMonth","color","variant"],"sourceRoot":""}