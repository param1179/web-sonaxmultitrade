{"version":3,"file":"static/js/644.a232380a.chunk.js","mappings":"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","sources":["views/buttons/dropdowns/Dropdowns.js"],"sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst Dropdowns = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Single button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Here&#39;s how you can put them to work with either <code>&lt;button&gt;</code>{' '}\n              elements:\n            </p>\n            <DocsExample href=\"components/dropdown#single-button\">\n              <CDropdown>\n                <CDropdownToggle color=\"secondary\">Dropdown button</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              The best part is you can do this with any button variant, too:\n            </p>\n            <DocsExample href=\"components/dropdown#single-button\">\n              <>\n                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n                  (color, index) => (\n                    <CDropdown variant=\"btn-group\" key={index}>\n                      <CDropdownToggle color={color}>{color}</CDropdownToggle>\n                      <CDropdownMenu>\n                        <CDropdownItem href=\"#\">Action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                        <CDropdownDivider />\n                        <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                      </CDropdownMenu>\n                    </CDropdown>\n                  ),\n                )}\n              </>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Split button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Similarly, create split button dropdowns with virtually the same markup as single\n              button dropdowns, but with the addition of boolean prop <code>split</code> for proper\n              spacing around the dropdown caret.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              We use this extra class to reduce the horizontal <code>padding</code> on either side\n              of the caret by 25% and remove the <code>margin-left</code> that&#39;s attached for\n              normal button dropdowns. Those additional changes hold the caret centered in the split\n              button and implement a more properly sized hit area next to the main button.\n            </p>\n            <DocsExample href=\"components/dropdown#split-button\">\n              <>\n                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n                  (color, index) => (\n                    <CDropdown variant=\"btn-group\" key={index}>\n                      <CButton color={color}>{color}</CButton>\n                      <CDropdownToggle color={color} split />\n                      <CDropdownMenu>\n                        <CDropdownItem href=\"#\">Action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                        <CDropdownDivider />\n                        <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                      </CDropdownMenu>\n                    </CDropdown>\n                  ),\n                )}\n              </>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Button dropdowns work with buttons of all sizes, including default and split dropdown\n              buttons.\n            </p>\n            <DocsExample href=\"components/dropdown#sizing\">\n              <CDropdown variant=\"btn-group\">\n                <CDropdownToggle color=\"secondary\" size=\"lg\">\n                  Large button\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\">\n                <CButton color=\"secondary\" size=\"lg\">\n                  Large split button\n                </CButton>\n                <CDropdownToggle color=\"secondary\" size=\"lg\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n            <DocsExample href=\"components/dropdown#sizing\">\n              <CDropdown variant=\"btn-group\">\n                <CDropdownToggle color=\"secondary\" size=\"sm\">\n                  Small button\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\">\n                <CButton color=\"secondary\" size=\"sm\">\n                  Small split button\n                </CButton>\n                <CDropdownToggle color=\"secondary\" size=\"sm\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Single button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Opt into darker dropdowns to match a dark navbar or custom style by set{' '}\n              <code>dark</code> property. No changes are required to the dropdown items.\n            </p>\n            <DocsExample href=\"components/dropdown#dark-dropdowns\">\n              <CDropdown dark>\n                <CDropdownToggle color=\"secondary\">Dropdown button</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">And putting it to use in a navbar:</p>\n            <DocsExample href=\"components/dropdown#dark-dropdowns\">\n              <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                  <a className=\"navbar-brand\" href=\"https://coreui.io/react/\">\n                    Navbar\n                  </a>\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-coreui-toggle=\"collapse\"\n                    data-coreui-target=\"#navbarNavDarkDropdown\"\n                    aria-controls=\"navbarNavDarkDropdown\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                  >\n                    <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n                  <div className=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n                    <ul className=\"navbar-nav\">\n                      <CDropdown dark component=\"li\" variant=\"nav-item\">\n                        <CDropdownToggle>Dropdown</CDropdownToggle>\n                        <CDropdownMenu>\n                          <CDropdownItem href=\"#\">Action</CDropdownItem>\n                          <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                          <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                          <CDropdownDivider />\n                          <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </ul>\n                  </div>\n                </div>\n              </nav>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropup</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus above elements by adding{' '}\n              <code>direction=&#34;dropup&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <DocsExample href=\"components/dropdown#dropup\">\n              <CDropdown variant=\"btn-group\" direction=\"dropup\">\n                <CDropdownToggle color=\"secondary\">Dropdown</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\" direction=\"dropup\">\n                <CButton color=\"secondary\">Small split button</CButton>\n                <CDropdownToggle color=\"secondary\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropright</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus at the right of the elements by adding{' '}\n              <code>direction=&#34;dropend&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <DocsExample href=\"components/dropdown#dropright\">\n              <CDropdown variant=\"btn-group\" direction=\"dropend\">\n                <CDropdownToggle color=\"secondary\">Dropdown</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\" direction=\"dropend\">\n                <CButton color=\"secondary\">Small split button</CButton>\n                <CDropdownToggle color=\"secondary\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropleft</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus at the left of the elements by adding{' '}\n              <code>direction=&#34;dropstart&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <DocsExample href=\"components/dropdown#dropleft\">\n              <CButtonGroup>\n                <CDropdown variant=\"btn-group\" direction=\"dropstart\">\n                  <CDropdownToggle color=\"secondary\" split />\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CButton color=\"secondary\">Small split button</CButton>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Dropdowns\n"],"names":["xs","className","href","color","map","index","variant","split","size","dark","type","id","component","direction"],"sourceRoot":""}