{"version":3,"file":"static/js/5735.c6380026.chunk.js","mappings":"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","sources":["views/base/list-groups/ListGroups.js"],"sourcesContent":["import React from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormCheck,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst ListGroups = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Basic example</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The default list group is an unordered list with items and the proper CSS classes.\n              Build upon it with the options that follow, or with your CSS as required.\n            </p>\n            <DocsExample href=\"components/list-group\">\n              <CListGroup>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Active items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>active</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\n              show the current active selection.\n            </p>\n            <DocsExample href=\"components/list-group/#active-items\">\n              <CListGroup>\n                <CListGroupItem active>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Disabled items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>disabled</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\n              make it appear disabled.\n            </p>\n            <DocsExample href=\"components/list-group/#disabled-items\">\n              <CListGroup>\n                <CListGroupItem disabled>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Links and buttons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use <code>&lt;a&gt;</code>s or <code>&lt;button&gt;</code>s to create{' '}\n              <em>actionable</em> list group items with hover, disabled, and active states by adding{' '}\n              <code>component=&#34;a|button&#34;</code>. We separate these pseudo-classes to ensure\n              list groups made of non-interactive elements (like <code>&lt;li&gt;</code>s or{' '}\n              <code>&lt;div&gt;</code>\n              s) don&#39;tprovide a click or tap affordance.\n            </p>\n            <DocsExample href=\"components/list-group/#links-and-buttons\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  Cras justo odio\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Morbi leo risus\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Porta ac consectetur ac\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\" disabled>\n                  Vestibulum at eros\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Flush</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>flush</code> boolean property to remove some borders and rounded corners to\n              render list group items edge-to-edge in a parent container (e.g., cards).\n            </p>\n            <DocsExample href=\"components/list-group/#flush\">\n              <CListGroup flush>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Horizontal</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>layout=&#34;horizontal&#34;</code> to change the layout of list group items\n              from vertical to horizontal across all breakpoints. Alternatively, choose a responsive\n              variant <code>.layout=&#34;horizontal-&#123;sm | md | lg | xl | xxl&#125;&#34;</code>{' '}\n              to make a list group horizontal starting at that breakpoint&#39;s{' '}\n              <code>min-width</code>. Currently{' '}\n              <strong>horizontal list groups cannot be combined with flush list groups.</strong>\n            </p>\n            <DocsExample href=\"components/list-group/#flush\">\n              {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => (\n                <CListGroup className=\"mb-2\" layout={`horizontal${breakpoint}`} key={index}>\n                  <CListGroupItem>Cras justo odio</CListGroupItem>\n                  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                  <CListGroupItem>Morbi leo risus</CListGroupItem>\n                </CListGroup>\n              ))}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Contextual classes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use contextual classes to style list items with a stateful background and color.\n            </p>\n            <DocsExample href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem color={color} key={index}>\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              Contextual classes also work with <code>&lt;a&gt;</code>s or{' '}\n              <code>&lt;button&gt;</code>s. Note the addition of the hover styles here not present\n              in the previous example. Also supported is the <code>active</code> state; apply it to\n              indicate an active selection on a contextual list group item.\n            </p>\n            <DocsExample href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem component=\"a\" href=\"#\" color={color} key={index}>\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>With badges</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add badges to any list group item to show unread counts, activity, and more.\n            </p>\n            <DocsExample href=\"components/list-group/#with-badges\">\n              <CListGroup>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Cras justo odio\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    14\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Dapibus ac facilisis in\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    2\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Morbi leo risus\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    1\n                  </CBadge>\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add nearly any HTML within, even for linked list groups like the one below, with the\n              help of <a href=\"https://coreui.io/docs/utilities/flex/\">flexbox utilities</a>.\n            </p>\n            <DocsExample href=\"components/list-group/#custom-content\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small>3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small>Donec id elit non mi porta.</small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Checkboxes and radios</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Place CoreUI&#39;s checkboxes and radios within list group items and customize as\n              needed.\n            </p>\n            <DocsExample href=\"components/list-group/#checkboxes-and-radios\">\n              <CListGroup>\n                <CListGroupItem>\n                  <CFormCheck label=\"Cras justo odio\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Dapibus ac facilisis in\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Morbi leo risus\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"orta ac consectetur ac\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Vestibulum at eros\" />\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ListGroups\n"],"names":["xs","className","href","active","disabled","component","flush","map","breakpoint","index","layout","color","shape","label","defaultChecked"],"sourceRoot":""}